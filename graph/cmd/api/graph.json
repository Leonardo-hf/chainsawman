{
  "swagger": "2.0",
  "info": {
    "title": "",
    "version": ""
  },
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/graph/algo/avgCC": {
      "get": {
        "summary": "平均聚类系数",
        "operationId": "algoAvgCC",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/AlgoMetricReply"
            }
          }
        },
        "parameters": [
          {
            "name": "taskId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "graphId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "graph"
        ]
      }
    },
    "/api/graph/algo/betweenness": {
      "get": {
        "summary": "Betweenness算法",
        "operationId": "algoBetweenness",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/AlgoRankReply"
            }
          }
        },
        "parameters": [
          {
            "name": "taskId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "graphId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "graph"
        ]
      }
    },
    "/api/graph/algo/closeness": {
      "get": {
        "summary": "Closeness算法",
        "operationId": "algoCloseness",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/AlgoRankReply"
            }
          }
        },
        "parameters": [
          {
            "name": "taskId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "graphId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "graph"
        ]
      }
    },
    "/api/graph/algo/degree": {
      "get": {
        "summary": "度中心度算法",
        "operationId": "algoDegree",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/AlgoRankReply"
            }
          }
        },
        "parameters": [
          {
            "name": "taskId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "graphId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "graph"
        ]
      }
    },
    "/api/graph/algo/depth": {
      "get": {
        "summary": "Depth算法",
        "operationId": "algoDepth",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/AlgoRankReply"
            }
          }
        },
        "parameters": [
          {
            "name": "taskId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "graphId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "graph"
        ]
      }
    },
    "/api/graph/algo/ecology": {
      "get": {
        "summary": "Ecology算法",
        "operationId": "algoEcology",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/AlgoRankReply"
            }
          }
        },
        "parameters": [
          {
            "name": "taskId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "graphId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "graph"
        ]
      }
    },
    "/api/graph/algo/integration": {
      "get": {
        "summary": "Integration算法",
        "operationId": "algoIntegration",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/AlgoRankReply"
            }
          }
        },
        "parameters": [
          {
            "name": "taskId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "graphId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "graph"
        ]
      }
    },
    "/api/graph/algo/louvain": {
      "get": {
        "summary": "Louvain聚类算法",
        "operationId": "algoLouvain",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/AlgoRankReply"
            }
          }
        },
        "parameters": [
          {
            "name": "taskId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "graphId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "maxIter",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64",
            "default": "10"
          },
          {
            "name": "internalIter",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64",
            "default": "5"
          },
          {
            "name": "tol",
            "in": "query",
            "required": false,
            "type": "number",
            "format": "double",
            "default": "0.5"
          }
        ],
        "tags": [
          "graph"
        ]
      }
    },
    "/api/graph/algo/pr": {
      "get": {
        "summary": "PageRank算法",
        "operationId": "algoPageRank",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/AlgoRankReply"
            }
          }
        },
        "parameters": [
          {
            "name": "taskId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "graphId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "iter",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64",
            "default": "3"
          },
          {
            "name": "prob",
            "in": "query",
            "required": false,
            "type": "number",
            "format": "double",
            "default": "0.85"
          }
        ],
        "tags": [
          "graph"
        ]
      }
    },
    "/api/graph/algo/quantity": {
      "get": {
        "summary": "Quantity算法",
        "operationId": "algoQuantity",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/AlgoRankReply"
            }
          }
        },
        "parameters": [
          {
            "name": "taskId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "graphId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "iter",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64",
            "default": "100"
          }
        ],
        "tags": [
          "graph"
        ]
      }
    },
    "/api/graph/create": {
      "post": {
        "summary": "新建图",
        "operationId": "createGraph",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GraphInfoReply"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateGraphRequest"
            }
          }
        ],
        "tags": [
          "graph"
        ]
      }
    },
    "/api/graph/detail": {
      "get": {
        "summary": "获取图的详细边节点信息",
        "operationId": "getGraph",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetGraphDetailReply"
            }
          }
        },
        "parameters": [
          {
            "name": "taskId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "graphId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "top",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "max",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64",
            "default": "2000"
          }
        ],
        "tags": [
          "graph"
        ]
      }
    },
    "/api/graph/drop": {
      "post": {
        "summary": "删除图",
        "operationId": "dropGraph",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/BaseReply"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DropGraphRequest"
            }
          }
        ],
        "tags": [
          "graph"
        ]
      }
    },
    "/api/graph/file/get": {
      "get": {
        "summary": "获得文件下载链接",
        "operationId": "fileGetPresigned",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/PresignedReply"
            }
          }
        },
        "parameters": [
          {
            "name": "filename",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "graph"
        ]
      }
    },
    "/api/graph/file/put": {
      "get": {
        "summary": "获得文件上传链接",
        "operationId": "filePutPresigned",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/PresignedReply"
            }
          }
        },
        "tags": [
          "graph"
        ]
      }
    },
    "/api/graph/getAll": {
      "get": {
        "summary": "获取图列表",
        "operationId": "getAllGraph",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetAllGraphReply"
            }
          }
        },
        "tags": [
          "graph"
        ]
      }
    },
    "/api/graph/group/create": {
      "post": {
        "summary": "新建策略组",
        "operationId": "createGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GroupInfoReply"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateGroupRequest"
            }
          }
        ],
        "tags": [
          "graph"
        ]
      }
    },
    "/api/graph/group/drop": {
      "post": {
        "summary": "删除策略组",
        "operationId": "dropGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/BaseReply"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DropGroupRequest"
            }
          }
        ],
        "tags": [
          "graph"
        ]
      }
    },
    "/api/graph/info": {
      "get": {
        "summary": "根据名称查询图信息",
        "operationId": "getGraphInfo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GraphInfoReply"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "graph"
        ]
      }
    },
    "/api/graph/node/getAll": {
      "get": {
        "summary": "获得全部节点",
        "operationId": "getNodes",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetNodesReply"
            }
          }
        },
        "parameters": [
          {
            "name": "taskId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "graphId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "graph"
        ]
      }
    },
    "/api/graph/node/getMatch": {
      "get": {
        "summary": "获得匹配节点",
        "operationId": "getMatchNodes",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetMatchNodesReply"
            }
          }
        },
        "parameters": [
          {
            "name": "graphId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "keywords",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "graph"
        ]
      }
    },
    "/api/graph/node/nbr": {
      "get": {
        "summary": "获取节点信息及邻居节点",
        "operationId": "getNeighbors",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetGraphDetailReply"
            }
          }
        },
        "parameters": [
          {
            "name": "taskId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "graphId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "nodeId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "distance",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "direction",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "max",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64",
            "default": "2000"
          }
        ],
        "tags": [
          "graph"
        ]
      }
    },
    "/api/graph/task/drop": {
      "post": {
        "summary": "删除任务",
        "operationId": "dropTask",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/BaseReply"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DropTaskRequest"
            }
          }
        ],
        "tags": [
          "graph"
        ]
      }
    },
    "/api/graph/task/task/getAll": {
      "get": {
        "summary": "获取图计算任务",
        "operationId": "getGraphTasks",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetTasksReply"
            }
          }
        },
        "parameters": [
          {
            "name": "graphId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "graph"
        ]
      }
    },
    "/api/graph/update": {
      "post": {
        "summary": "更新图",
        "operationId": "updateGraph",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GraphInfoReply"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateGraphRequest"
            }
          }
        ],
        "tags": [
          "graph"
        ]
      }
    }
  },
  "definitions": {
    "AlgoDegreeRequest": {
      "type": "object",
      "properties": {
        "taskId": {
          "type": "string"
        },
        "graphId": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "AlgoDegreeRequest",
      "required": [
        "graphId"
      ]
    },
    "AlgoLouvainRequest": {
      "type": "object",
      "properties": {
        "taskId": {
          "type": "string"
        },
        "graphId": {
          "type": "integer",
          "format": "int64"
        },
        "maxIter": {
          "type": "integer",
          "format": "int64",
          "default": "10"
        },
        "internalIter": {
          "type": "integer",
          "format": "int64",
          "default": "5"
        },
        "tol": {
          "type": "number",
          "format": "double",
          "default": "0.5"
        }
      },
      "title": "AlgoLouvainRequest",
      "required": [
        "graphId",
        "maxIter",
        "internalIter",
        "tol"
      ]
    },
    "AlgoMetricReply": {
      "type": "object",
      "properties": {
        "base": {
          "$ref": "#/definitions/BaseReply"
        },
        "score": {
          "type": "number",
          "format": "double"
        }
      },
      "title": "AlgoMetricReply",
      "required": [
        "base",
        "score"
      ]
    },
    "AlgoPageRankRequest": {
      "type": "object",
      "properties": {
        "taskId": {
          "type": "string"
        },
        "graphId": {
          "type": "integer",
          "format": "int64"
        },
        "iter": {
          "type": "integer",
          "format": "int64",
          "default": "3"
        },
        "prob": {
          "type": "number",
          "format": "double",
          "default": "0.85"
        }
      },
      "title": "AlgoPageRankRequest",
      "required": [
        "graphId",
        "iter",
        "prob"
      ]
    },
    "AlgoRankReply": {
      "type": "object",
      "properties": {
        "base": {
          "$ref": "#/definitions/BaseReply"
        },
        "ranks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Rank"
          }
        },
        "file": {
          "type": "string"
        }
      },
      "title": "AlgoRankReply",
      "required": [
        "base",
        "ranks",
        "file"
      ]
    },
    "AlgoRequest": {
      "type": "object",
      "properties": {
        "taskId": {
          "type": "string"
        },
        "graphId": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "AlgoRequest",
      "required": [
        "graphId"
      ]
    },
    "AlgoVoteRankRequest": {
      "type": "object",
      "properties": {
        "taskId": {
          "type": "string"
        },
        "graphId": {
          "type": "integer",
          "format": "int64"
        },
        "iter": {
          "type": "integer",
          "format": "int64",
          "default": "100"
        }
      },
      "title": "AlgoVoteRankRequest",
      "required": [
        "graphId",
        "iter"
      ]
    },
    "Attr": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "desc": {
          "type": "string"
        },
        "primary": {
          "type": "boolean",
          "format": "boolean"
        },
        "type": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "Attr",
      "required": [
        "name",
        "desc",
        "primary",
        "type"
      ]
    },
    "BaseReply": {
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "format": "int64"
        },
        "msg": {
          "type": "string"
        },
        "taskId": {
          "type": "string"
        },
        "taskStatus": {
          "type": "integer",
          "format": "int64"
        },
        "extra": {
          "type": "object"
        }
      },
      "title": "BaseReply",
      "required": [
        "status",
        "msg",
        "taskId",
        "taskStatus",
        "extra"
      ]
    },
    "CreateGraphRequest": {
      "type": "object",
      "properties": {
        "taskId": {
          "type": "string"
        },
        "graphId": {
          "type": "integer",
          "format": "int64"
        },
        "graph": {
          "type": "string"
        },
        "desc": {
          "type": "string"
        },
        "groupId": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "CreateGraphRequest",
      "required": [
        "graph",
        "groupId"
      ]
    },
    "CreateGroupRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "desc": {
          "type": "string"
        },
        "nodeTypeList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Structure"
          }
        },
        "edgeTypeList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Structure"
          }
        }
      },
      "title": "CreateGroupRequest",
      "required": [
        "name",
        "desc",
        "nodeTypeList",
        "edgeTypeList"
      ]
    },
    "DropGraphRequest": {
      "type": "object",
      "properties": {
        "graphId": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "DropGraphRequest",
      "required": [
        "graphId"
      ]
    },
    "DropGroupRequest": {
      "type": "object",
      "properties": {
        "groupId": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "DropGroupRequest",
      "required": [
        "groupId"
      ]
    },
    "DropTaskRequest": {
      "type": "object",
      "properties": {
        "taskId": {
          "type": "string"
        }
      },
      "title": "DropTaskRequest"
    },
    "Edge": {
      "type": "object",
      "properties": {
        "source": {
          "type": "integer",
          "format": "int64"
        },
        "target": {
          "type": "integer",
          "format": "int64"
        },
        "attrs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Pair"
          }
        }
      },
      "title": "Edge",
      "required": [
        "source",
        "target",
        "attrs"
      ]
    },
    "EdgePack": {
      "type": "object",
      "properties": {
        "tag": {
          "type": "string"
        },
        "edges": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Edge"
          }
        }
      },
      "title": "EdgePack",
      "required": [
        "tag",
        "edges"
      ]
    },
    "GetAllGraphReply": {
      "type": "object",
      "properties": {
        "base": {
          "$ref": "#/definitions/BaseReply"
        },
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Group"
          }
        }
      },
      "title": "GetAllGraphReply",
      "required": [
        "base",
        "groups"
      ]
    },
    "GetGraphDetailReply": {
      "type": "object",
      "properties": {
        "base": {
          "$ref": "#/definitions/BaseReply"
        },
        "nodePacks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NodePack"
          }
        },
        "edgePacks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EdgePack"
          }
        }
      },
      "title": "GetGraphDetailReply",
      "required": [
        "base",
        "nodePacks",
        "edgePacks"
      ]
    },
    "GetGraphDetailRequest": {
      "type": "object",
      "properties": {
        "taskId": {
          "type": "string"
        },
        "graphId": {
          "type": "integer",
          "format": "int64"
        },
        "top": {
          "type": "integer",
          "format": "int64"
        },
        "max": {
          "type": "integer",
          "format": "int64",
          "default": "2000"
        }
      },
      "title": "GetGraphDetailRequest",
      "required": [
        "graphId",
        "top",
        "max"
      ]
    },
    "GetGraphInfoRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      },
      "title": "GetGraphInfoRequest",
      "required": [
        "name"
      ]
    },
    "GetMatchNodesReply": {
      "type": "object",
      "properties": {
        "base": {
          "$ref": "#/definitions/BaseReply"
        },
        "matchNodePacks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MatchNodePacks"
          }
        }
      },
      "title": "GetMatchNodesReply",
      "required": [
        "base",
        "matchNodePacks"
      ]
    },
    "GetMatchNodesRequest": {
      "type": "object",
      "properties": {
        "graphId": {
          "type": "integer",
          "format": "int64"
        },
        "keywords": {
          "type": "string"
        }
      },
      "title": "GetMatchNodesRequest",
      "required": [
        "graphId",
        "keywords"
      ]
    },
    "GetNeighborsRequest": {
      "type": "object",
      "properties": {
        "taskId": {
          "type": "string"
        },
        "graphId": {
          "type": "integer",
          "format": "int64"
        },
        "nodeId": {
          "type": "integer",
          "format": "int64"
        },
        "distance": {
          "type": "integer",
          "format": "int64"
        },
        "direction": {
          "type": "string"
        },
        "max": {
          "type": "integer",
          "format": "int64",
          "default": "2000"
        }
      },
      "title": "GetNeighborsRequest",
      "required": [
        "graphId",
        "nodeId",
        "distance",
        "direction",
        "max"
      ]
    },
    "GetNodesReply": {
      "type": "object",
      "properties": {
        "base": {
          "$ref": "#/definitions/BaseReply"
        },
        "nodePacks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NodePack"
          }
        }
      },
      "title": "GetNodesReply",
      "required": [
        "base",
        "nodePacks"
      ]
    },
    "GetNodesRequest": {
      "type": "object",
      "properties": {
        "taskId": {
          "type": "string"
        },
        "graphId": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "GetNodesRequest",
      "required": [
        "graphId"
      ]
    },
    "GetTasksReply": {
      "type": "object",
      "properties": {
        "base": {
          "$ref": "#/definitions/BaseReply"
        },
        "tasks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Task"
          }
        }
      },
      "title": "GetTasksReply",
      "required": [
        "base",
        "tasks"
      ]
    },
    "GetTasksRequest": {
      "type": "object",
      "properties": {
        "graphId": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "GetTasksRequest",
      "required": [
        "graphId"
      ]
    },
    "Graph": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "status": {
          "type": "integer",
          "format": "int64"
        },
        "groupId": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "desc": {
          "type": "string"
        },
        "numNode": {
          "type": "integer",
          "format": "int64"
        },
        "numEdge": {
          "type": "integer",
          "format": "int64"
        },
        "creatAt": {
          "type": "integer",
          "format": "int64"
        },
        "updateAt": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "Graph",
      "required": [
        "id",
        "status",
        "groupId",
        "name",
        "desc",
        "numNode",
        "numEdge",
        "creatAt",
        "updateAt"
      ]
    },
    "GraphInfoReply": {
      "type": "object",
      "properties": {
        "base": {
          "$ref": "#/definitions/BaseReply"
        },
        "graph": {
          "$ref": "#/definitions/Graph"
        }
      },
      "title": "GraphInfoReply",
      "required": [
        "base",
        "graph"
      ]
    },
    "Group": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "desc": {
          "type": "string"
        },
        "nodeTypeList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Structure"
          }
        },
        "edgeTypeList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Structure"
          }
        },
        "graphs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Graph"
          }
        }
      },
      "title": "Group",
      "required": [
        "id",
        "name",
        "desc",
        "nodeTypeList",
        "edgeTypeList",
        "graphs"
      ]
    },
    "GroupInfoReply": {
      "type": "object",
      "properties": {
        "base": {
          "$ref": "#/definitions/BaseReply"
        },
        "group": {
          "$ref": "#/definitions/Group"
        }
      },
      "title": "GroupInfoReply",
      "required": [
        "base",
        "group"
      ]
    },
    "MatchNode": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "primaryAttr": {
          "type": "string"
        }
      },
      "title": "MatchNode",
      "required": [
        "id",
        "primaryAttr"
      ]
    },
    "MatchNodePacks": {
      "type": "object",
      "properties": {
        "tag": {
          "type": "string"
        },
        "match": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MatchNode"
          }
        }
      },
      "title": "MatchNodePacks",
      "required": [
        "tag",
        "match"
      ]
    },
    "Node": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "deg": {
          "type": "integer",
          "format": "int64"
        },
        "attrs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Pair"
          }
        }
      },
      "title": "Node",
      "required": [
        "id",
        "deg",
        "attrs"
      ]
    },
    "NodePack": {
      "type": "object",
      "properties": {
        "tag": {
          "type": "string"
        },
        "nodes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Node"
          }
        }
      },
      "title": "NodePack",
      "required": [
        "tag",
        "nodes"
      ]
    },
    "Pair": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "title": "Pair",
      "required": [
        "key",
        "value"
      ]
    },
    "PresignedReply": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        },
        "filename": {
          "type": "string"
        }
      },
      "title": "PresignedReply",
      "required": [
        "url",
        "filename"
      ]
    },
    "PresignedRequest": {
      "type": "object",
      "properties": {
        "filename": {
          "type": "string"
        }
      },
      "title": "PresignedRequest",
      "required": [
        "filename"
      ]
    },
    "Rank": {
      "type": "object",
      "properties": {
        "tag": {
          "type": "string"
        },
        "node": {
          "$ref": "#/definitions/Node"
        },
        "score": {
          "type": "number",
          "format": "double"
        }
      },
      "title": "Rank",
      "required": [
        "tag",
        "node",
        "score"
      ]
    },
    "Structure": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "desc": {
          "type": "string"
        },
        "edgeDirection": {
          "type": "boolean",
          "format": "boolean"
        },
        "display": {
          "type": "string"
        },
        "attrs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Attr"
          }
        }
      },
      "title": "Structure",
      "required": [
        "id",
        "name",
        "desc",
        "edgeDirection",
        "display",
        "attrs"
      ]
    },
    "Task": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "idf": {
          "type": "string"
        },
        "createTime": {
          "type": "integer",
          "format": "int64"
        },
        "updateTime": {
          "type": "integer",
          "format": "int64"
        },
        "status": {
          "type": "integer",
          "format": "int64"
        },
        "req": {
          "type": "string"
        },
        "res": {
          "type": "string"
        }
      },
      "title": "Task",
      "required": [
        "id",
        "idf",
        "createTime",
        "updateTime",
        "status",
        "req",
        "res"
      ]
    },
    "UpdateGraphRequest": {
      "type": "object",
      "properties": {
        "taskId": {
          "type": "string"
        },
        "graphId": {
          "type": "integer",
          "format": "int64"
        },
        "nodeFileList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Pair"
          }
        },
        "edgeFileList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Pair"
          }
        }
      },
      "title": "UpdateGraphRequest",
      "required": [
        "graphId",
        "nodeFileList",
        "edgeFileList"
      ]
    }
  },
  "securityDefinitions": {
    "apiKey": {
      "type": "apiKey",
      "description": "Enter JWT Bearer token **_only_**",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "apiKey": []
    }
  ]
}
