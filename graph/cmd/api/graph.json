{
  "swagger": "2.0",
  "info": {
    "title": "",
    "version": ""
  },
  "host": "127.0.0.1",
  "basePath": "/api/graph",
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/graph/algo/avgCC": {
      "get": {
        "summary": "平均聚类系数",
        "operationId": "algoAvgCC",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/AlgoMetricReply"
            }
          }
        },
        "parameters": [
          {
            "name": "taskId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "graphId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "requestBody": {},
        "tags": [
          "graph"
        ]
      }
    },
    "/api/graph/algo/betweenness": {
      "get": {
        "summary": "Betweenness算法",
        "operationId": "algoBetweenness",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/AlgoRankReply"
            }
          }
        },
        "parameters": [
          {
            "name": "taskId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "graphId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "requestBody": {},
        "tags": [
          "graph"
        ]
      }
    },
    "/api/graph/algo/closeness": {
      "get": {
        "summary": "Closeness算法",
        "operationId": "algoCloseness",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/AlgoRankReply"
            }
          }
        },
        "parameters": [
          {
            "name": "taskId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "graphId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "requestBody": {},
        "tags": [
          "graph"
        ]
      }
    },
    "/api/graph/algo/degree": {
      "get": {
        "summary": "度中心度算法",
        "operationId": "algoDegree",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/AlgoRankReply"
            }
          }
        },
        "parameters": [
          {
            "name": "taskId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "graphId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "requestBody": {},
        "tags": [
          "graph"
        ]
      }
    },
    "/api/graph/algo/louvain": {
      "get": {
        "summary": "Louvain聚类算法",
        "operationId": "algoLouvain",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/AlgoRankReply"
            }
          }
        },
        "parameters": [
          {
            "name": "taskId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "graphId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "maxIter",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64",
            "default": "10"
          },
          {
            "name": "internalIter",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64",
            "default": "5"
          },
          {
            "name": "tol",
            "in": "query",
            "required": false,
            "type": "number",
            "format": "double",
            "default": "0.5"
          }
        ],
        "requestBody": {},
        "tags": [
          "graph"
        ]
      }
    },
    "/api/graph/algo/pr": {
      "get": {
        "summary": "PageRank算法",
        "operationId": "algoPageRank",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/AlgoRankReply"
            }
          }
        },
        "parameters": [
          {
            "name": "taskId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "graphId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "iter",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64",
            "default": "3"
          },
          {
            "name": "prob",
            "in": "query",
            "required": false,
            "type": "number",
            "format": "double",
            "default": "0.85"
          }
        ],
        "requestBody": {},
        "tags": [
          "graph"
        ]
      }
    },
    "/api/graph/algo/vr": {
      "get": {
        "summary": "VoteRank算法",
        "operationId": "algoVoteRank",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/AlgoRankReply"
            }
          }
        },
        "parameters": [
          {
            "name": "taskId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "graphId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "iter",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64",
            "default": "100"
          }
        ],
        "requestBody": {},
        "tags": [
          "graph"
        ]
      }
    },
    "/api/graph/create": {
      "post": {
        "summary": "上传图",
        "operationId": "createGraph",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/SearchGraphReply"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UploadRequest"
            }
          }
        ],
        "requestBody": {},
        "tags": [
          "graph"
        ]
      }
    },
    "/api/graph/drop": {
      "post": {
        "summary": "删除图",
        "operationId": "dropGraph",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/BaseReply"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DropRequest"
            }
          }
        ],
        "requestBody": {},
        "tags": [
          "graph"
        ]
      }
    },
    "/api/graph/get": {
      "get": {
        "summary": "获取图的详细节点信息",
        "operationId": "getGraph",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/SearchGraphDetailReply"
            }
          }
        },
        "parameters": [
          {
            "name": "taskId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "graphId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "min",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "requestBody": {},
        "tags": [
          "graph"
        ]
      }
    },
    "/api/graph/getAll": {
      "get": {
        "summary": "获取图列表",
        "operationId": "getAllGraph",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/SearchAllGraphReply"
            }
          }
        },
        "requestBody": {},
        "tags": [
          "graph"
        ]
      }
    },
    "/api/graph/node/get": {
      "get": {
        "summary": "获取节点信息及邻居节点",
        "operationId": "getNeighbors",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/SearchNodeReply"
            }
          }
        },
        "parameters": [
          {
            "name": "taskId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "graphId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "nodeId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "distance",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "min",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "requestBody": {},
        "tags": [
          "graph"
        ]
      }
    },
    "/api/graph/task/getAll": {
      "get": {
        "summary": "获取图计算任务",
        "operationId": "getGraphTasks",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/SearchTasksReply"
            }
          }
        },
        "parameters": [
          {
            "name": "graphId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "requestBody": {},
        "tags": [
          "graph"
        ]
      }
    }
  },
  "definitions": {
    "AlgoDegreeRequest": {
      "type": "object",
      "properties": {
        "taskId": {
          "type": "integer",
          "format": "int64"
        },
        "graphId": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "AlgoDegreeRequest",
      "required": [
        "taskId",
        "graphId"
      ]
    },
    "AlgoLouvainRequest": {
      "type": "object",
      "properties": {
        "taskId": {
          "type": "integer",
          "format": "int64"
        },
        "graphId": {
          "type": "integer",
          "format": "int64"
        },
        "maxIter": {
          "type": "integer",
          "format": "int64",
          "default": "10"
        },
        "internalIter": {
          "type": "integer",
          "format": "int64",
          "default": "5"
        },
        "tol": {
          "type": "number",
          "format": "double",
          "default": "0.5"
        }
      },
      "title": "AlgoLouvainRequest",
      "required": [
        "taskId",
        "graphId",
        "maxIter",
        "internalIter",
        "tol"
      ]
    },
    "AlgoMetricReply": {
      "type": "object",
      "properties": {
        "base": {
          "$ref": "#/definitions/BaseReply"
        },
        "score": {
          "type": "number",
          "format": "double"
        }
      },
      "title": "AlgoMetricReply",
      "required": [
        "base",
        "score"
      ]
    },
    "AlgoPageRankRequest": {
      "type": "object",
      "properties": {
        "taskId": {
          "type": "integer",
          "format": "int64"
        },
        "graphId": {
          "type": "integer",
          "format": "int64"
        },
        "iter": {
          "type": "integer",
          "format": "int64",
          "default": "3"
        },
        "prob": {
          "type": "number",
          "format": "double",
          "default": "0.85"
        }
      },
      "title": "AlgoPageRankRequest",
      "required": [
        "taskId",
        "graphId",
        "iter",
        "prob"
      ]
    },
    "AlgoRankReply": {
      "type": "object",
      "properties": {
        "base": {
          "$ref": "#/definitions/BaseReply"
        },
        "ranks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Rank"
          }
        },
        "file": {
          "type": "string"
        }
      },
      "title": "AlgoRankReply",
      "required": [
        "base",
        "ranks",
        "file"
      ]
    },
    "AlgoRequest": {
      "type": "object",
      "properties": {
        "taskId": {
          "type": "integer",
          "format": "int64"
        },
        "graphId": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "AlgoRequest",
      "required": [
        "taskId",
        "graphId"
      ]
    },
    "AlgoVoteRankRequest": {
      "type": "object",
      "properties": {
        "taskId": {
          "type": "integer",
          "format": "int64"
        },
        "graphId": {
          "type": "integer",
          "format": "int64"
        },
        "iter": {
          "type": "integer",
          "format": "int64",
          "default": "100"
        }
      },
      "title": "AlgoVoteRankRequest",
      "required": [
        "taskId",
        "graphId",
        "iter"
      ]
    },
    "BaseReply": {
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "format": "int64"
        },
        "msg": {
          "type": "string"
        },
        "taskId": {
          "type": "integer",
          "format": "int64"
        },
        "taskStatus": {
          "type": "integer",
          "format": "int64"
        },
        "extra": {
          "type": "object"
        }
      },
      "title": "BaseReply",
      "required": [
        "status",
        "msg",
        "taskId",
        "taskStatus",
        "extra"
      ]
    },
    "DropRequest": {
      "type": "object",
      "properties": {
        "graphId": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "DropRequest",
      "required": [
        "graphId"
      ]
    },
    "Edge": {
      "type": "object",
      "properties": {
        "source": {
          "type": "integer",
          "format": "int64"
        },
        "target": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "Edge",
      "required": [
        "source",
        "target"
      ]
    },
    "Graph": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "status": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "desc": {
          "type": "string"
        },
        "nodes": {
          "type": "integer",
          "format": "int64"
        },
        "edges": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "Graph",
      "required": [
        "id",
        "status",
        "name",
        "desc",
        "nodes",
        "edges"
      ]
    },
    "Node": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "desc": {
          "type": "string"
        },
        "deg": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "Node",
      "required": [
        "id",
        "name",
        "desc",
        "deg"
      ]
    },
    "Param": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "title": "Param",
      "required": [
        "key",
        "value"
      ]
    },
    "Rank": {
      "type": "object",
      "properties": {
        "nodeId": {
          "type": "integer",
          "format": "int64"
        },
        "score": {
          "type": "number",
          "format": "double"
        }
      },
      "title": "Rank",
      "required": [
        "nodeId",
        "score"
      ]
    },
    "SearchAllGraphReply": {
      "type": "object",
      "properties": {
        "base": {
          "$ref": "#/definitions/BaseReply"
        },
        "graphs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Graph"
          }
        }
      },
      "title": "SearchAllGraphReply",
      "required": [
        "base",
        "graphs"
      ]
    },
    "SearchGraphDetailReply": {
      "type": "object",
      "properties": {
        "base": {
          "$ref": "#/definitions/BaseReply"
        },
        "nodes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Node"
          }
        },
        "edges": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Edge"
          }
        }
      },
      "title": "SearchGraphDetailReply",
      "required": [
        "base",
        "nodes",
        "edges"
      ]
    },
    "SearchGraphReply": {
      "type": "object",
      "properties": {
        "base": {
          "$ref": "#/definitions/BaseReply"
        },
        "graph": {
          "$ref": "#/definitions/Graph"
        }
      },
      "title": "SearchGraphReply",
      "required": [
        "base",
        "graph"
      ]
    },
    "SearchNodeReply": {
      "type": "object",
      "properties": {
        "base": {
          "$ref": "#/definitions/BaseReply"
        },
        "node": {
          "$ref": "#/definitions/Node"
        },
        "nodes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Node"
          }
        },
        "edges": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Edge"
          }
        }
      },
      "title": "SearchNodeReply",
      "required": [
        "base",
        "node",
        "nodes",
        "edges"
      ]
    },
    "SearchNodeRequest": {
      "type": "object",
      "properties": {
        "taskId": {
          "type": "integer",
          "format": "int64"
        },
        "graphId": {
          "type": "integer",
          "format": "int64"
        },
        "nodeId": {
          "type": "integer",
          "format": "int64"
        },
        "distance": {
          "type": "integer",
          "format": "int64"
        },
        "min": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "SearchNodeRequest",
      "required": [
        "graphId",
        "nodeId",
        "distance",
        "min"
      ]
    },
    "SearchRequest": {
      "type": "object",
      "properties": {
        "taskId": {
          "type": "integer",
          "format": "int64"
        },
        "graphId": {
          "type": "integer",
          "format": "int64"
        },
        "min": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "SearchRequest",
      "required": [
        "graphId",
        "min"
      ]
    },
    "SearchTasksReply": {
      "type": "object",
      "properties": {
        "base": {
          "$ref": "#/definitions/BaseReply"
        },
        "tasks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Task"
          }
        }
      },
      "title": "SearchTasksReply",
      "required": [
        "base",
        "tasks"
      ]
    },
    "SearchTasksRequest": {
      "type": "object",
      "properties": {
        "graphId": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "SearchTasksRequest",
      "required": [
        "graphId"
      ]
    },
    "Task": {
      "type": "object",
      "properties": {
        "idf": {
          "type": "integer",
          "format": "int64"
        },
        "desc": {
          "type": "string"
        },
        "createTime": {
          "type": "integer",
          "format": "int64"
        },
        "updateTime": {
          "type": "integer",
          "format": "int64"
        },
        "status": {
          "type": "integer",
          "format": "int64"
        },
        "req": {
          "type": "object"
        },
        "res": {
          "type": "object"
        }
      },
      "title": "Task",
      "required": [
        "idf",
        "desc",
        "createTime",
        "updateTime",
        "status",
        "req",
        "res"
      ]
    },
    "UploadRequest": {
      "type": "object",
      "properties": {
        "taskId": {
          "type": "integer",
          "format": "int64"
        },
        "graph": {
          "type": "string"
        },
        "desc": {
          "type": "string"
        },
        "nodeId": {
          "type": "string"
        },
        "edgeId": {
          "type": "string"
        },
        "graphId": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "UploadRequest",
      "required": [
        "graph",
        "nodeId",
        "edgeId"
      ]
    }
  },
  "securityDefinitions": {
    "apiKey": {
      "type": "apiKey",
      "description": "Enter JWT Bearer token **_only_**",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "apiKey": []
    }
  ]
}
