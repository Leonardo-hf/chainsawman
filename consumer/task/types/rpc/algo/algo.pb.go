// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: algo/src/main/protobuf/algo.proto

package algo

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Element_Type int32

const (
	Element_INT64       Element_Type = 0
	Element_DOUBLE      Element_Type = 1
	Element_STRING      Element_Type = 2
	Element_LIST_DOUBLE Element_Type = 3
	Element_LIST_STRING Element_Type = 4
)

// Enum value maps for Element_Type.
var (
	Element_Type_name = map[int32]string{
		0: "INT64",
		1: "DOUBLE",
		2: "STRING",
		3: "LIST_DOUBLE",
		4: "LIST_STRING",
	}
	Element_Type_value = map[string]int32{
		"INT64":       0,
		"DOUBLE":      1,
		"STRING":      2,
		"LIST_DOUBLE": 3,
		"LIST_STRING": 4,
	}
)

func (x Element_Type) Enum() *Element_Type {
	p := new(Element_Type)
	*p = x
	return p
}

func (x Element_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Element_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_algo_src_main_protobuf_algo_proto_enumTypes[0].Descriptor()
}

func (Element_Type) Type() protoreflect.EnumType {
	return &file_algo_src_main_protobuf_algo_proto_enumTypes[0]
}

func (x Element_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Element_Type.Descriptor instead.
func (Element_Type) EnumDescriptor() ([]byte, []int) {
	return file_algo_src_main_protobuf_algo_proto_rawDescGZIP(), []int{1, 0}
}

type Algo_Type int32

const (
	Algo_Rank    Algo_Type = 0
	Algo_Cluster Algo_Type = 1
	Algo_Metrics Algo_Type = 2
	Algo_Others  Algo_Type = 3
)

// Enum value maps for Algo_Type.
var (
	Algo_Type_name = map[int32]string{
		0: "Rank",
		1: "Cluster",
		2: "Metrics",
		3: "Others",
	}
	Algo_Type_value = map[string]int32{
		"Rank":    0,
		"Cluster": 1,
		"Metrics": 2,
		"Others":  3,
	}
)

func (x Algo_Type) Enum() *Algo_Type {
	p := new(Algo_Type)
	*p = x
	return p
}

func (x Algo_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Algo_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_algo_src_main_protobuf_algo_proto_enumTypes[1].Descriptor()
}

func (Algo_Type) Type() protoreflect.EnumType {
	return &file_algo_src_main_protobuf_algo_proto_enumTypes[1]
}

func (x Algo_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Algo_Type.Descriptor instead.
func (Algo_Type) EnumDescriptor() ([]byte, []int) {
	return file_algo_src_main_protobuf_algo_proto_rawDescGZIP(), []int{5, 0}
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_algo_src_main_protobuf_algo_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_algo_src_main_protobuf_algo_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_algo_src_main_protobuf_algo_proto_rawDescGZIP(), []int{0}
}

type Element struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key     string       `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	KeyDesc string       `protobuf:"bytes,2,opt,name=keyDesc,proto3" json:"keyDesc,omitempty"`
	Type    Element_Type `protobuf:"varint,3,opt,name=type,proto3,enum=service.Element_Type" json:"type,omitempty"`
}

func (x *Element) Reset() {
	*x = Element{}
	if protoimpl.UnsafeEnabled {
		mi := &file_algo_src_main_protobuf_algo_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Element) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Element) ProtoMessage() {}

func (x *Element) ProtoReflect() protoreflect.Message {
	mi := &file_algo_src_main_protobuf_algo_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Element.ProtoReflect.Descriptor instead.
func (*Element) Descriptor() ([]byte, []int) {
	return file_algo_src_main_protobuf_algo_proto_rawDescGZIP(), []int{1}
}

func (x *Element) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Element) GetKeyDesc() string {
	if x != nil {
		return x.KeyDesc
	}
	return ""
}

func (x *Element) GetType() Element_Type {
	if x != nil {
		return x.Type
	}
	return Element_INT64
}

type CreateAlgoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string     `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Desc   string     `protobuf:"bytes,2,opt,name=desc,proto3" json:"desc,omitempty"`
	Params []*Element `protobuf:"bytes,3,rep,name=params,proto3" json:"params,omitempty"`
	Code   string     `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`
	Type   Algo_Type  `protobuf:"varint,5,opt,name=type,proto3,enum=service.Algo_Type" json:"type,omitempty"`
}

func (x *CreateAlgoReq) Reset() {
	*x = CreateAlgoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_algo_src_main_protobuf_algo_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAlgoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAlgoReq) ProtoMessage() {}

func (x *CreateAlgoReq) ProtoReflect() protoreflect.Message {
	mi := &file_algo_src_main_protobuf_algo_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAlgoReq.ProtoReflect.Descriptor instead.
func (*CreateAlgoReq) Descriptor() ([]byte, []int) {
	return file_algo_src_main_protobuf_algo_proto_rawDescGZIP(), []int{2}
}

func (x *CreateAlgoReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateAlgoReq) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *CreateAlgoReq) GetParams() []*Element {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *CreateAlgoReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *CreateAlgoReq) GetType() Algo_Type {
	if x != nil {
		return x.Type
	}
	return Algo_Rank
}

type DropAlgoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *DropAlgoReq) Reset() {
	*x = DropAlgoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_algo_src_main_protobuf_algo_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DropAlgoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropAlgoReq) ProtoMessage() {}

func (x *DropAlgoReq) ProtoReflect() protoreflect.Message {
	mi := &file_algo_src_main_protobuf_algo_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DropAlgoReq.ProtoReflect.Descriptor instead.
func (*DropAlgoReq) Descriptor() ([]byte, []int) {
	return file_algo_src_main_protobuf_algo_proto_rawDescGZIP(), []int{3}
}

func (x *DropAlgoReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type AlgoReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Algos []*Algo `protobuf:"bytes,1,rep,name=algos,proto3" json:"algos,omitempty"`
}

func (x *AlgoReply) Reset() {
	*x = AlgoReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_algo_src_main_protobuf_algo_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlgoReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlgoReply) ProtoMessage() {}

func (x *AlgoReply) ProtoReflect() protoreflect.Message {
	mi := &file_algo_src_main_protobuf_algo_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlgoReply.ProtoReflect.Descriptor instead.
func (*AlgoReply) Descriptor() ([]byte, []int) {
	return file_algo_src_main_protobuf_algo_proto_rawDescGZIP(), []int{4}
}

func (x *AlgoReply) GetAlgos() []*Algo {
	if x != nil {
		return x.Algos
	}
	return nil
}

type Algo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int64      `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name   string     `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Desc   string     `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`
	Type   Algo_Type  `protobuf:"varint,4,opt,name=type,proto3,enum=service.Algo_Type" json:"type,omitempty"`
	Params []*Element `protobuf:"bytes,5,rep,name=params,proto3" json:"params,omitempty"`
}

func (x *Algo) Reset() {
	*x = Algo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_algo_src_main_protobuf_algo_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Algo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Algo) ProtoMessage() {}

func (x *Algo) ProtoReflect() protoreflect.Message {
	mi := &file_algo_src_main_protobuf_algo_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Algo.ProtoReflect.Descriptor instead.
func (*Algo) Descriptor() ([]byte, []int) {
	return file_algo_src_main_protobuf_algo_proto_rawDescGZIP(), []int{5}
}

func (x *Algo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Algo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Algo) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *Algo) GetType() Algo_Type {
	if x != nil {
		return x.Type
	}
	return Algo_Rank
}

func (x *Algo) GetParams() []*Element {
	if x != nil {
		return x.Params
	}
	return nil
}

type Rank struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Score float64 `protobuf:"fixed64,2,opt,name=score,proto3" json:"score,omitempty"`
}

func (x *Rank) Reset() {
	*x = Rank{}
	if protoimpl.UnsafeEnabled {
		mi := &file_algo_src_main_protobuf_algo_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Rank) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rank) ProtoMessage() {}

func (x *Rank) ProtoReflect() protoreflect.Message {
	mi := &file_algo_src_main_protobuf_algo_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rank.ProtoReflect.Descriptor instead.
func (*Rank) Descriptor() ([]byte, []int) {
	return file_algo_src_main_protobuf_algo_proto_rawDescGZIP(), []int{6}
}

func (x *Rank) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Rank) GetScore() float64 {
	if x != nil {
		return x.Score
	}
	return 0
}

type RankReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ranks []*Rank `protobuf:"bytes,1,rep,name=ranks,proto3" json:"ranks,omitempty"`
	File  string  `protobuf:"bytes,2,opt,name=file,proto3" json:"file,omitempty"`
}

func (x *RankReply) Reset() {
	*x = RankReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_algo_src_main_protobuf_algo_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RankReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RankReply) ProtoMessage() {}

func (x *RankReply) ProtoReflect() protoreflect.Message {
	mi := &file_algo_src_main_protobuf_algo_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RankReply.ProtoReflect.Descriptor instead.
func (*RankReply) Descriptor() ([]byte, []int) {
	return file_algo_src_main_protobuf_algo_proto_rawDescGZIP(), []int{7}
}

func (x *RankReply) GetRanks() []*Rank {
	if x != nil {
		return x.Ranks
	}
	return nil
}

func (x *RankReply) GetFile() string {
	if x != nil {
		return x.File
	}
	return ""
}

type MetricsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Score float64 `protobuf:"fixed64,1,opt,name=score,proto3" json:"score,omitempty"`
}

func (x *MetricsReply) Reset() {
	*x = MetricsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_algo_src_main_protobuf_algo_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetricsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricsReply) ProtoMessage() {}

func (x *MetricsReply) ProtoReflect() protoreflect.Message {
	mi := &file_algo_src_main_protobuf_algo_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricsReply.ProtoReflect.Descriptor instead.
func (*MetricsReply) Descriptor() ([]byte, []int) {
	return file_algo_src_main_protobuf_algo_proto_rawDescGZIP(), []int{8}
}

func (x *MetricsReply) GetScore() float64 {
	if x != nil {
		return x.Score
	}
	return 0
}

type CustomAlgoReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rets string `protobuf:"bytes,1,opt,name=rets,proto3" json:"rets,omitempty"`
}

func (x *CustomAlgoReply) Reset() {
	*x = CustomAlgoReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_algo_src_main_protobuf_algo_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomAlgoReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomAlgoReply) ProtoMessage() {}

func (x *CustomAlgoReply) ProtoReflect() protoreflect.Message {
	mi := &file_algo_src_main_protobuf_algo_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomAlgoReply.ProtoReflect.Descriptor instead.
func (*CustomAlgoReply) Descriptor() ([]byte, []int) {
	return file_algo_src_main_protobuf_algo_proto_rawDescGZIP(), []int{9}
}

func (x *CustomAlgoReply) GetRets() string {
	if x != nil {
		return x.Rets
	}
	return ""
}

type PRConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Iter int64   `protobuf:"varint,1,opt,name=iter,proto3" json:"iter,omitempty"`
	Prob float64 `protobuf:"fixed64,2,opt,name=prob,proto3" json:"prob,omitempty"`
}

func (x *PRConfig) Reset() {
	*x = PRConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_algo_src_main_protobuf_algo_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PRConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PRConfig) ProtoMessage() {}

func (x *PRConfig) ProtoReflect() protoreflect.Message {
	mi := &file_algo_src_main_protobuf_algo_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PRConfig.ProtoReflect.Descriptor instead.
func (*PRConfig) Descriptor() ([]byte, []int) {
	return file_algo_src_main_protobuf_algo_proto_rawDescGZIP(), []int{10}
}

func (x *PRConfig) GetIter() int64 {
	if x != nil {
		return x.Iter
	}
	return 0
}

func (x *PRConfig) GetProb() float64 {
	if x != nil {
		return x.Prob
	}
	return 0
}

type SPConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Src int64 `protobuf:"varint,1,opt,name=src,proto3" json:"src,omitempty"`
	Dst int64 `protobuf:"varint,2,opt,name=dst,proto3" json:"dst,omitempty"`
}

func (x *SPConfig) Reset() {
	*x = SPConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_algo_src_main_protobuf_algo_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SPConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SPConfig) ProtoMessage() {}

func (x *SPConfig) ProtoReflect() protoreflect.Message {
	mi := &file_algo_src_main_protobuf_algo_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SPConfig.ProtoReflect.Descriptor instead.
func (*SPConfig) Descriptor() ([]byte, []int) {
	return file_algo_src_main_protobuf_algo_proto_rawDescGZIP(), []int{11}
}

func (x *SPConfig) GetSrc() int64 {
	if x != nil {
		return x.Src
	}
	return 0
}

func (x *SPConfig) GetDst() int64 {
	if x != nil {
		return x.Dst
	}
	return 0
}

type VoteConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Iter int64 `protobuf:"varint,1,opt,name=iter,proto3" json:"iter,omitempty"`
}

func (x *VoteConfig) Reset() {
	*x = VoteConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_algo_src_main_protobuf_algo_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoteConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoteConfig) ProtoMessage() {}

func (x *VoteConfig) ProtoReflect() protoreflect.Message {
	mi := &file_algo_src_main_protobuf_algo_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoteConfig.ProtoReflect.Descriptor instead.
func (*VoteConfig) Descriptor() ([]byte, []int) {
	return file_algo_src_main_protobuf_algo_proto_rawDescGZIP(), []int{12}
}

func (x *VoteConfig) GetIter() int64 {
	if x != nil {
		return x.Iter
	}
	return 0
}

type LouvainConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaxIter      int64   `protobuf:"varint,1,opt,name=maxIter,proto3" json:"maxIter,omitempty"`
	InternalIter int64   `protobuf:"varint,2,opt,name=internalIter,proto3" json:"internalIter,omitempty"`
	Tol          float64 `protobuf:"fixed64,3,opt,name=tol,proto3" json:"tol,omitempty"`
}

func (x *LouvainConfig) Reset() {
	*x = LouvainConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_algo_src_main_protobuf_algo_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LouvainConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LouvainConfig) ProtoMessage() {}

func (x *LouvainConfig) ProtoReflect() protoreflect.Message {
	mi := &file_algo_src_main_protobuf_algo_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LouvainConfig.ProtoReflect.Descriptor instead.
func (*LouvainConfig) Descriptor() ([]byte, []int) {
	return file_algo_src_main_protobuf_algo_proto_rawDescGZIP(), []int{13}
}

func (x *LouvainConfig) GetMaxIter() int64 {
	if x != nil {
		return x.MaxIter
	}
	return 0
}

func (x *LouvainConfig) GetInternalIter() int64 {
	if x != nil {
		return x.InternalIter
	}
	return 0
}

func (x *LouvainConfig) GetTol() float64 {
	if x != nil {
		return x.Tol
	}
	return 0
}

type BaseReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GraphID  int64    `protobuf:"varint,1,opt,name=graphID,proto3" json:"graphID,omitempty"`
	EdgeTags []string `protobuf:"bytes,2,rep,name=edgeTags,proto3" json:"edgeTags,omitempty"`
	Target   string   `protobuf:"bytes,3,opt,name=target,proto3" json:"target,omitempty"`
}

func (x *BaseReq) Reset() {
	*x = BaseReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_algo_src_main_protobuf_algo_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaseReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseReq) ProtoMessage() {}

func (x *BaseReq) ProtoReflect() protoreflect.Message {
	mi := &file_algo_src_main_protobuf_algo_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseReq.ProtoReflect.Descriptor instead.
func (*BaseReq) Descriptor() ([]byte, []int) {
	return file_algo_src_main_protobuf_algo_proto_rawDescGZIP(), []int{14}
}

func (x *BaseReq) GetGraphID() int64 {
	if x != nil {
		return x.GraphID
	}
	return 0
}

func (x *BaseReq) GetEdgeTags() []string {
	if x != nil {
		return x.EdgeTags
	}
	return nil
}

func (x *BaseReq) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

type PageRankReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base *BaseReq  `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	Cfg  *PRConfig `protobuf:"bytes,2,opt,name=cfg,proto3" json:"cfg,omitempty"`
}

func (x *PageRankReq) Reset() {
	*x = PageRankReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_algo_src_main_protobuf_algo_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageRankReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageRankReq) ProtoMessage() {}

func (x *PageRankReq) ProtoReflect() protoreflect.Message {
	mi := &file_algo_src_main_protobuf_algo_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageRankReq.ProtoReflect.Descriptor instead.
func (*PageRankReq) Descriptor() ([]byte, []int) {
	return file_algo_src_main_protobuf_algo_proto_rawDescGZIP(), []int{15}
}

func (x *PageRankReq) GetBase() *BaseReq {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *PageRankReq) GetCfg() *PRConfig {
	if x != nil {
		return x.Cfg
	}
	return nil
}

type VoteRankReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base *BaseReq    `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	Cfg  *VoteConfig `protobuf:"bytes,2,opt,name=cfg,proto3" json:"cfg,omitempty"`
}

func (x *VoteRankReq) Reset() {
	*x = VoteRankReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_algo_src_main_protobuf_algo_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoteRankReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoteRankReq) ProtoMessage() {}

func (x *VoteRankReq) ProtoReflect() protoreflect.Message {
	mi := &file_algo_src_main_protobuf_algo_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoteRankReq.ProtoReflect.Descriptor instead.
func (*VoteRankReq) Descriptor() ([]byte, []int) {
	return file_algo_src_main_protobuf_algo_proto_rawDescGZIP(), []int{16}
}

func (x *VoteRankReq) GetBase() *BaseReq {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *VoteRankReq) GetCfg() *VoteConfig {
	if x != nil {
		return x.Cfg
	}
	return nil
}

type LouvainReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base *BaseReq       `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	Cfg  *LouvainConfig `protobuf:"bytes,2,opt,name=cfg,proto3" json:"cfg,omitempty"`
}

func (x *LouvainReq) Reset() {
	*x = LouvainReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_algo_src_main_protobuf_algo_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LouvainReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LouvainReq) ProtoMessage() {}

func (x *LouvainReq) ProtoReflect() protoreflect.Message {
	mi := &file_algo_src_main_protobuf_algo_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LouvainReq.ProtoReflect.Descriptor instead.
func (*LouvainReq) Descriptor() ([]byte, []int) {
	return file_algo_src_main_protobuf_algo_proto_rawDescGZIP(), []int{17}
}

func (x *LouvainReq) GetBase() *BaseReq {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *LouvainReq) GetCfg() *LouvainConfig {
	if x != nil {
		return x.Cfg
	}
	return nil
}

type CustomAlgoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base   *BaseReq `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	AlgoID int64    `protobuf:"varint,2,opt,name=algoID,proto3" json:"algoID,omitempty"`
	Params string   `protobuf:"bytes,3,opt,name=params,proto3" json:"params,omitempty"`
}

func (x *CustomAlgoReq) Reset() {
	*x = CustomAlgoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_algo_src_main_protobuf_algo_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomAlgoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomAlgoReq) ProtoMessage() {}

func (x *CustomAlgoReq) ProtoReflect() protoreflect.Message {
	mi := &file_algo_src_main_protobuf_algo_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomAlgoReq.ProtoReflect.Descriptor instead.
func (*CustomAlgoReq) Descriptor() ([]byte, []int) {
	return file_algo_src_main_protobuf_algo_proto_rawDescGZIP(), []int{18}
}

func (x *CustomAlgoReq) GetBase() *BaseReq {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *CustomAlgoReq) GetAlgoID() int64 {
	if x != nil {
		return x.AlgoID
	}
	return 0
}

func (x *CustomAlgoReq) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

var File_algo_src_main_protobuf_algo_proto protoreflect.FileDescriptor

var file_algo_src_main_protobuf_algo_proto_rawDesc = []byte{
	0x0a, 0x21, 0x61, 0x6c, 0x67, 0x6f, 0x2f, 0x73, 0x72, 0x63, 0x2f, 0x6d, 0x61, 0x69, 0x6e, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6c, 0x67, 0x6f, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x22, 0x07, 0x0a, 0x05,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0xad, 0x01, 0x0a, 0x07, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x44, 0x65, 0x73, 0x63, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x44, 0x65, 0x73, 0x63, 0x12, 0x29, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x4b, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x09, 0x0a, 0x05, 0x49, 0x4e, 0x54, 0x36, 0x34, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x44,
	0x4f, 0x55, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x54, 0x52, 0x49, 0x4e,
	0x47, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x4c, 0x49, 0x53, 0x54, 0x5f, 0x44, 0x4f, 0x55, 0x42,
	0x4c, 0x45, 0x10, 0x03, 0x12, 0x0f, 0x0a, 0x0b, 0x4c, 0x49, 0x53, 0x54, 0x5f, 0x53, 0x54, 0x52,
	0x49, 0x4e, 0x47, 0x10, 0x04, 0x22, 0x9d, 0x01, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x41, 0x6c, 0x67, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64,
	0x65, 0x73, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12,
	0x28, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x26, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x6c, 0x67, 0x6f, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x21, 0x0a, 0x0b, 0x44, 0x72, 0x6f, 0x70, 0x41, 0x6c, 0x67,
	0x6f, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x30, 0x0a, 0x09, 0x41, 0x6c, 0x67, 0x6f,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x23, 0x0a, 0x05, 0x61, 0x6c, 0x67, 0x6f, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41,
	0x6c, 0x67, 0x6f, 0x52, 0x05, 0x61, 0x6c, 0x67, 0x6f, 0x73, 0x22, 0xc8, 0x01, 0x0a, 0x04, 0x41,
	0x6c, 0x67, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x26, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x41, 0x6c, 0x67, 0x6f, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x28, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x45, 0x6c,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x36, 0x0a,
	0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x52, 0x61, 0x6e, 0x6b, 0x10, 0x00, 0x12,
	0x0b, 0x0a, 0x07, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07,
	0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x4f, 0x74, 0x68,
	0x65, 0x72, 0x73, 0x10, 0x03, 0x22, 0x2c, 0x0a, 0x04, 0x52, 0x61, 0x6e, 0x6b, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x73, 0x63,
	0x6f, 0x72, 0x65, 0x22, 0x44, 0x0a, 0x09, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x23, 0x0a, 0x05, 0x72, 0x61, 0x6e, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x05,
	0x72, 0x61, 0x6e, 0x6b, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x22, 0x24, 0x0a, 0x0c, 0x4d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f,
	0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x22,
	0x25, 0x0a, 0x0f, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x41, 0x6c, 0x67, 0x6f, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x72, 0x65, 0x74, 0x73, 0x22, 0x32, 0x0a, 0x08, 0x50, 0x52, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x69, 0x74, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x72, 0x6f, 0x62, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x70, 0x72, 0x6f, 0x62, 0x22, 0x2e, 0x0a, 0x08, 0x53, 0x50,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x72, 0x63, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x03, 0x73, 0x72, 0x63, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x73, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x64, 0x73, 0x74, 0x22, 0x20, 0x0a, 0x0a, 0x56, 0x6f,
	0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x69, 0x74, 0x65, 0x72, 0x22, 0x5f, 0x0a, 0x0d,
	0x4c, 0x6f, 0x75, 0x76, 0x61, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x61, 0x78, 0x49, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x6d, 0x61, 0x78, 0x49, 0x74, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x49, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x74, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x74,
	0x6f, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x74, 0x6f, 0x6c, 0x22, 0x57, 0x0a,
	0x07, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x61, 0x70,
	0x68, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x67, 0x72, 0x61, 0x70, 0x68,
	0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x64, 0x67, 0x65, 0x54, 0x61, 0x67, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x65, 0x64, 0x67, 0x65, 0x54, 0x61, 0x67, 0x73, 0x12, 0x16,
	0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x22, 0x58, 0x0a, 0x0b, 0x50, 0x61, 0x67, 0x65, 0x52, 0x61,
	0x6e, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x24, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x42, 0x61,
	0x73, 0x65, 0x52, 0x65, 0x71, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x03, 0x63,
	0x66, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x50, 0x52, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x03, 0x63, 0x66, 0x67,
	0x22, 0x5a, 0x0a, 0x0b, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x12,
	0x24, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x52,
	0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x03, 0x63, 0x66, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x56, 0x6f, 0x74,
	0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x03, 0x63, 0x66, 0x67, 0x22, 0x5c, 0x0a, 0x0a,
	0x4c, 0x6f, 0x75, 0x76, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x24, 0x0a, 0x04, 0x62, 0x61,
	0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65,
	0x12, 0x28, 0x0a, 0x03, 0x63, 0x66, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4c, 0x6f, 0x75, 0x76, 0x61, 0x69, 0x6e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x03, 0x63, 0x66, 0x67, 0x22, 0x65, 0x0a, 0x0d, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x41, 0x6c, 0x67, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x24, 0x0a, 0x04, 0x62,
	0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x52, 0x04, 0x62, 0x61, 0x73,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6c, 0x67, 0x6f, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x61, 0x6c, 0x67, 0x6f, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x32, 0xb5, 0x05, 0x0a, 0x04, 0x61, 0x6c, 0x67, 0x6f, 0x12, 0x38, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x67, 0x6f, 0x12, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x67, 0x6f, 0x52, 0x65, 0x71,
	0x1a, 0x12, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x6c, 0x67, 0x6f, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x2f, 0x0a, 0x09, 0x71, 0x75, 0x65, 0x72, 0x79, 0x41, 0x6c, 0x67,
	0x6f, 0x12, 0x0e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x1a, 0x12, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x6c, 0x67, 0x6f,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x34, 0x0a, 0x08, 0x64, 0x72, 0x6f, 0x70, 0x41, 0x6c, 0x67,
	0x6f, 0x12, 0x14, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x72, 0x6f, 0x70,
	0x41, 0x6c, 0x67, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x41, 0x6c, 0x67, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2e, 0x0a, 0x06, 0x64,
	0x65, 0x67, 0x72, 0x65, 0x65, 0x12, 0x10, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x34, 0x0a, 0x08, 0x70,
	0x61, 0x67, 0x65, 0x72, 0x61, 0x6e, 0x6b, 0x12, 0x14, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x34, 0x0a, 0x08, 0x76, 0x6f, 0x74, 0x65, 0x72, 0x61, 0x6e, 0x6b, 0x12, 0x14, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x6b,
	0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x61,
	0x6e, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2d, 0x0a, 0x05, 0x64, 0x65, 0x70, 0x74, 0x68,
	0x12, 0x10, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52,
	0x65, 0x71, 0x1a, 0x12, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x61, 0x6e,
	0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2f, 0x0a, 0x07, 0x65, 0x63, 0x6f, 0x6c, 0x6f, 0x67,
	0x79, 0x12, 0x10, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65,
	0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x61,
	0x6e, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x33, 0x0a, 0x0b, 0x62, 0x65, 0x74, 0x77, 0x65,
	0x65, 0x6e, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x10, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x31, 0x0a, 0x09,
	0x63, 0x6c, 0x6f, 0x73, 0x65, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x10, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x32, 0x0a, 0x07, 0x6c, 0x6f, 0x75, 0x76, 0x61, 0x69, 0x6e, 0x12, 0x13, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x4c, 0x6f, 0x75, 0x76, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x1a,
	0x12, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x38, 0x0a, 0x0d, 0x61, 0x76, 0x67, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x69, 0x6e, 0x67, 0x12, 0x10, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x42,
	0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x3a, 0x0a,
	0x06, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x12, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x41, 0x6c, 0x67, 0x6f, 0x52, 0x65, 0x71, 0x1a,
	0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x41, 0x6c, 0x67, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x2f, 0x72,
	0x70, 0x63, 0x2f, 0x61, 0x6c, 0x67, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_algo_src_main_protobuf_algo_proto_rawDescOnce sync.Once
	file_algo_src_main_protobuf_algo_proto_rawDescData = file_algo_src_main_protobuf_algo_proto_rawDesc
)

func file_algo_src_main_protobuf_algo_proto_rawDescGZIP() []byte {
	file_algo_src_main_protobuf_algo_proto_rawDescOnce.Do(func() {
		file_algo_src_main_protobuf_algo_proto_rawDescData = protoimpl.X.CompressGZIP(file_algo_src_main_protobuf_algo_proto_rawDescData)
	})
	return file_algo_src_main_protobuf_algo_proto_rawDescData
}

var file_algo_src_main_protobuf_algo_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_algo_src_main_protobuf_algo_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_algo_src_main_protobuf_algo_proto_goTypes = []interface{}{
	(Element_Type)(0),       // 0: service.Element.Type
	(Algo_Type)(0),          // 1: service.Algo.Type
	(*Empty)(nil),           // 2: service.Empty
	(*Element)(nil),         // 3: service.Element
	(*CreateAlgoReq)(nil),   // 4: service.CreateAlgoReq
	(*DropAlgoReq)(nil),     // 5: service.DropAlgoReq
	(*AlgoReply)(nil),       // 6: service.AlgoReply
	(*Algo)(nil),            // 7: service.Algo
	(*Rank)(nil),            // 8: service.Rank
	(*RankReply)(nil),       // 9: service.RankReply
	(*MetricsReply)(nil),    // 10: service.MetricsReply
	(*CustomAlgoReply)(nil), // 11: service.CustomAlgoReply
	(*PRConfig)(nil),        // 12: service.PRConfig
	(*SPConfig)(nil),        // 13: service.SPConfig
	(*VoteConfig)(nil),      // 14: service.VoteConfig
	(*LouvainConfig)(nil),   // 15: service.LouvainConfig
	(*BaseReq)(nil),         // 16: service.BaseReq
	(*PageRankReq)(nil),     // 17: service.PageRankReq
	(*VoteRankReq)(nil),     // 18: service.VoteRankReq
	(*LouvainReq)(nil),      // 19: service.LouvainReq
	(*CustomAlgoReq)(nil),   // 20: service.CustomAlgoReq
}
var file_algo_src_main_protobuf_algo_proto_depIdxs = []int32{
	0,  // 0: service.Element.type:type_name -> service.Element.Type
	3,  // 1: service.CreateAlgoReq.params:type_name -> service.Element
	1,  // 2: service.CreateAlgoReq.type:type_name -> service.Algo.Type
	7,  // 3: service.AlgoReply.algos:type_name -> service.Algo
	1,  // 4: service.Algo.type:type_name -> service.Algo.Type
	3,  // 5: service.Algo.params:type_name -> service.Element
	8,  // 6: service.RankReply.ranks:type_name -> service.Rank
	16, // 7: service.PageRankReq.base:type_name -> service.BaseReq
	12, // 8: service.PageRankReq.cfg:type_name -> service.PRConfig
	16, // 9: service.VoteRankReq.base:type_name -> service.BaseReq
	14, // 10: service.VoteRankReq.cfg:type_name -> service.VoteConfig
	16, // 11: service.LouvainReq.base:type_name -> service.BaseReq
	15, // 12: service.LouvainReq.cfg:type_name -> service.LouvainConfig
	16, // 13: service.CustomAlgoReq.base:type_name -> service.BaseReq
	4,  // 14: service.algo.createAlgo:input_type -> service.CreateAlgoReq
	2,  // 15: service.algo.queryAlgo:input_type -> service.Empty
	5,  // 16: service.algo.dropAlgo:input_type -> service.DropAlgoReq
	16, // 17: service.algo.degree:input_type -> service.BaseReq
	17, // 18: service.algo.pagerank:input_type -> service.PageRankReq
	18, // 19: service.algo.voterank:input_type -> service.VoteRankReq
	16, // 20: service.algo.depth:input_type -> service.BaseReq
	16, // 21: service.algo.ecology:input_type -> service.BaseReq
	16, // 22: service.algo.betweenness:input_type -> service.BaseReq
	16, // 23: service.algo.closeness:input_type -> service.BaseReq
	19, // 24: service.algo.louvain:input_type -> service.LouvainReq
	16, // 25: service.algo.avgClustering:input_type -> service.BaseReq
	20, // 26: service.algo.custom:input_type -> service.CustomAlgoReq
	6,  // 27: service.algo.createAlgo:output_type -> service.AlgoReply
	6,  // 28: service.algo.queryAlgo:output_type -> service.AlgoReply
	6,  // 29: service.algo.dropAlgo:output_type -> service.AlgoReply
	9,  // 30: service.algo.degree:output_type -> service.RankReply
	9,  // 31: service.algo.pagerank:output_type -> service.RankReply
	9,  // 32: service.algo.voterank:output_type -> service.RankReply
	9,  // 33: service.algo.depth:output_type -> service.RankReply
	9,  // 34: service.algo.ecology:output_type -> service.RankReply
	9,  // 35: service.algo.betweenness:output_type -> service.RankReply
	9,  // 36: service.algo.closeness:output_type -> service.RankReply
	9,  // 37: service.algo.louvain:output_type -> service.RankReply
	10, // 38: service.algo.avgClustering:output_type -> service.MetricsReply
	11, // 39: service.algo.custom:output_type -> service.CustomAlgoReply
	27, // [27:40] is the sub-list for method output_type
	14, // [14:27] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_algo_src_main_protobuf_algo_proto_init() }
func file_algo_src_main_protobuf_algo_proto_init() {
	if File_algo_src_main_protobuf_algo_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_algo_src_main_protobuf_algo_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_algo_src_main_protobuf_algo_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Element); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_algo_src_main_protobuf_algo_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAlgoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_algo_src_main_protobuf_algo_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DropAlgoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_algo_src_main_protobuf_algo_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlgoReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_algo_src_main_protobuf_algo_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Algo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_algo_src_main_protobuf_algo_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Rank); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_algo_src_main_protobuf_algo_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RankReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_algo_src_main_protobuf_algo_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetricsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_algo_src_main_protobuf_algo_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomAlgoReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_algo_src_main_protobuf_algo_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PRConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_algo_src_main_protobuf_algo_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SPConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_algo_src_main_protobuf_algo_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VoteConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_algo_src_main_protobuf_algo_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LouvainConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_algo_src_main_protobuf_algo_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaseReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_algo_src_main_protobuf_algo_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageRankReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_algo_src_main_protobuf_algo_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VoteRankReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_algo_src_main_protobuf_algo_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LouvainReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_algo_src_main_protobuf_algo_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomAlgoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_algo_src_main_protobuf_algo_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_algo_src_main_protobuf_algo_proto_goTypes,
		DependencyIndexes: file_algo_src_main_protobuf_algo_proto_depIdxs,
		EnumInfos:         file_algo_src_main_protobuf_algo_proto_enumTypes,
		MessageInfos:      file_algo_src_main_protobuf_algo_proto_msgTypes,
	}.Build()
	File_algo_src_main_protobuf_algo_proto = out.File
	file_algo_src_main_protobuf_algo_proto_rawDesc = nil
	file_algo_src_main_protobuf_algo_proto_goTypes = nil
	file_algo_src_main_protobuf_algo_proto_depIdxs = nil
}
