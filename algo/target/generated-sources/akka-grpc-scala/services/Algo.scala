// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package services

@SerialVersionUID(0L)
final case class Algo(
    id: _root_.scala.Long = 0L,
    name: _root_.scala.Predef.String = "",
    desc: _root_.scala.Predef.String = "",
    isCustom: _root_.scala.Boolean = false,
    `type`: services.Algo.Type = services.Algo.Type.Rank,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[Algo] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = id
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(1, __value)
        }
      };
      
      {
        val __value = name
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
        }
      };
      
      {
        val __value = desc
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(3, __value)
        }
      };
      
      {
        val __value = isCustom
        if (__value != false) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(4, __value)
        }
      };
      
      {
        val __value = `type`.value
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(5, __value)
        }
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = id
        if (__v != 0L) {
          _output__.writeInt64(1, __v)
        }
      };
      {
        val __v = name
        if (!__v.isEmpty) {
          _output__.writeString(2, __v)
        }
      };
      {
        val __v = desc
        if (!__v.isEmpty) {
          _output__.writeString(3, __v)
        }
      };
      {
        val __v = isCustom
        if (__v != false) {
          _output__.writeBool(4, __v)
        }
      };
      {
        val __v = `type`.value
        if (__v != 0) {
          _output__.writeEnum(5, __v)
        }
      };
      unknownFields.writeTo(_output__)
    }
    def withId(__v: _root_.scala.Long): Algo = copy(id = __v)
    def withName(__v: _root_.scala.Predef.String): Algo = copy(name = __v)
    def withDesc(__v: _root_.scala.Predef.String): Algo = copy(desc = __v)
    def withIsCustom(__v: _root_.scala.Boolean): Algo = copy(isCustom = __v)
    def withType(__v: services.Algo.Type): Algo = copy(`type` = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = id
          if (__t != 0L) __t else null
        }
        case 2 => {
          val __t = name
          if (__t != "") __t else null
        }
        case 3 => {
          val __t = desc
          if (__t != "") __t else null
        }
        case 4 => {
          val __t = isCustom
          if (__t != false) __t else null
        }
        case 5 => {
          val __t = `type`.javaValueDescriptor
          if (__t.getNumber() != 0) __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PLong(id)
        case 2 => _root_.scalapb.descriptors.PString(name)
        case 3 => _root_.scalapb.descriptors.PString(desc)
        case 4 => _root_.scalapb.descriptors.PBoolean(isCustom)
        case 5 => _root_.scalapb.descriptors.PEnum(`type`.scalaValueDescriptor)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: services.Algo.type = services.Algo
    // @@protoc_insertion_point(GeneratedMessage[services.Algo])
}

object Algo extends scalapb.GeneratedMessageCompanion[services.Algo] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[services.Algo] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): services.Algo = {
    var __id: _root_.scala.Long = 0L
    var __name: _root_.scala.Predef.String = ""
    var __desc: _root_.scala.Predef.String = ""
    var __isCustom: _root_.scala.Boolean = false
    var __type: services.Algo.Type = services.Algo.Type.Rank
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 8 =>
          __id = _input__.readInt64()
        case 18 =>
          __name = _input__.readStringRequireUtf8()
        case 26 =>
          __desc = _input__.readStringRequireUtf8()
        case 32 =>
          __isCustom = _input__.readBool()
        case 40 =>
          __type = services.Algo.Type.fromValue(_input__.readEnum())
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    services.Algo(
        id = __id,
        name = __name,
        desc = __desc,
        isCustom = __isCustom,
        `type` = __type,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[services.Algo] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      services.Algo(
        id = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        name = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        desc = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        isCustom = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.Boolean]).getOrElse(false),
        `type` = services.Algo.Type.fromValue(__fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).map(_.as[_root_.scalapb.descriptors.EnumValueDescriptor]).getOrElse(services.Algo.Type.Rank.scalaValueDescriptor).number)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = AlgoProto.javaDescriptor.getMessageTypes().get(5)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = AlgoProto.scalaDescriptor.messages(5)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = {
    (__fieldNumber: @_root_.scala.unchecked) match {
      case 5 => services.Algo.Type
    }
  }
  lazy val defaultInstance = services.Algo(
    id = 0L,
    name = "",
    desc = "",
    isCustom = false,
    `type` = services.Algo.Type.Rank
  )
  sealed abstract class Type(val value: _root_.scala.Int) extends _root_.scalapb.GeneratedEnum {
    type EnumType = Type
    def isRank: _root_.scala.Boolean = false
    def isCluster: _root_.scala.Boolean = false
    def isMetrics: _root_.scala.Boolean = false
    def isOthers: _root_.scala.Boolean = false
    def companion: _root_.scalapb.GeneratedEnumCompanion[Type] = services.Algo.Type
    final def asRecognized: _root_.scala.Option[services.Algo.Type.Recognized] = if (isUnrecognized) _root_.scala.None else _root_.scala.Some(this.asInstanceOf[services.Algo.Type.Recognized])
  }
  
  object Type extends _root_.scalapb.GeneratedEnumCompanion[Type] {
    sealed trait Recognized extends Type
    implicit def enumCompanion: _root_.scalapb.GeneratedEnumCompanion[Type] = this
    
    @SerialVersionUID(0L)
    case object Rank extends Type(0) with Type.Recognized {
      val index = 0
      val name = "Rank"
      override def isRank: _root_.scala.Boolean = true
    }
    
    @SerialVersionUID(0L)
    case object Cluster extends Type(1) with Type.Recognized {
      val index = 1
      val name = "Cluster"
      override def isCluster: _root_.scala.Boolean = true
    }
    
    @SerialVersionUID(0L)
    case object Metrics extends Type(2) with Type.Recognized {
      val index = 2
      val name = "Metrics"
      override def isMetrics: _root_.scala.Boolean = true
    }
    
    @SerialVersionUID(0L)
    case object Others extends Type(3) with Type.Recognized {
      val index = 3
      val name = "Others"
      override def isOthers: _root_.scala.Boolean = true
    }
    
    @SerialVersionUID(0L)
    final case class Unrecognized(unrecognizedValue: _root_.scala.Int) extends Type(unrecognizedValue) with _root_.scalapb.UnrecognizedEnum
    lazy val values = scala.collection.immutable.Seq(Rank, Cluster, Metrics, Others)
    def fromValue(__value: _root_.scala.Int): Type = __value match {
      case 0 => Rank
      case 1 => Cluster
      case 2 => Metrics
      case 3 => Others
      case __other => Unrecognized(__other)
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.EnumDescriptor = services.Algo.javaDescriptor.getEnumTypes().get(0)
    def scalaDescriptor: _root_.scalapb.descriptors.EnumDescriptor = services.Algo.scalaDescriptor.enums(0)
  }
  implicit class AlgoLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, services.Algo]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, services.Algo](_l) {
    def id: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.id)((c_, f_) => c_.copy(id = f_))
    def name: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.name)((c_, f_) => c_.copy(name = f_))
    def desc: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.desc)((c_, f_) => c_.copy(desc = f_))
    def isCustom: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.isCustom)((c_, f_) => c_.copy(isCustom = f_))
    def `type`: _root_.scalapb.lenses.Lens[UpperPB, services.Algo.Type] = field(_.`type`)((c_, f_) => c_.copy(`type` = f_))
  }
  final val ID_FIELD_NUMBER = 1
  final val NAME_FIELD_NUMBER = 2
  final val DESC_FIELD_NUMBER = 3
  final val ISCUSTOM_FIELD_NUMBER = 4
  final val TYPE_FIELD_NUMBER = 5
  def of(
    id: _root_.scala.Long,
    name: _root_.scala.Predef.String,
    desc: _root_.scala.Predef.String,
    isCustom: _root_.scala.Boolean,
    `type`: services.Algo.Type
  ): _root_.services.Algo = _root_.services.Algo(
    id,
    name,
    desc,
    isCustom,
    `type`
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[services.Algo])
}
